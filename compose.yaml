services:
  back:
    container_name: back
    build:
      context: ./back-go
      target: base
    ports:
      - "8080:8080"
    volumes:
      - ./back-go:/app
    environment:
      MONGO_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_URI}
      TG_BOT_TOKEN: ${TG_BOT_TOKEN}
    depends_on:
      - mongo
    networks:
      - metadict

  front:
    container_name: front
    build:
      context: ./front
      dockerfile: Dockerfile
      target: base
    ports:
      - "3000:3000"
    volumes:
      - ./front:/app
      - /app/node_modules
    networks:
      - metadict

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/dev-nginx.conf:/etc/nginx/nginx.conf:ro
      - ${TG_BOT_CERT}:${TG_BOT_CERT_SERVER}
      - ${TG_BOT_KEY}:${TG_BOT_KEY_SERVER}
    ports:
      - "443:443"
    environment:
      - TG_BOT_CERT=${TG_BOT_CERT}
      - TG_BOT_KEY=${TG_BOT_KEY}
    depends_on:
      - back
      - front
    networks:
      - metadict

  mongo:
    container_name: mongo
    build:
      context: ./mongo
      target: base
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ${MONGO_DATA_PATH}:/data/db
    ports:
      - "27017:27017"
    networks:
      - metadict

networks:
  metadict:
    driver: bridge
